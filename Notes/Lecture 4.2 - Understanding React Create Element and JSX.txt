* So lets go into viet, in viet we will see that main.jsx take app.jsx and render it. Here app.jsx is a function. We can make another function like it and render it too instead of app.jsx

<MyApp /> -> In the custop react that we have created we were rendering there using a function and giving the element that we created as an argument. But here we give function like

<MyApp /> 

Now where do that syntax comes from, it comes from the bundler that viet use in a background. In this syntax bundler convert the elements present in the function in the form of a tree. That blunder is a babble

* Bundler convert the function and the elements inside it in the form of a tree

* We can also write <MyApp> as MyApp () as it is a function only but it is not a good practice, the good practice is to write it in a form of jsx syntax

* Can we directly pass the react ELement in the form of a tree element


* We can also directly pass a variable which return the element and it will get render

* But not the ReactElement because we have directly created the tree in it and have given the name of the key and object by ourseleves which isnt a correct syntax that react uses in a background

* React.createELement is a function in react.


* Now we are creating an another element to see how react make tree in the background, we are gonna use the syntax of react to make th tree

* If we return any element in a variable it will work, we dont need to pass it in the < element/>. It will create itself in a tree.

* Now lets see how react create the tree using the syntax that react accept

* We will make the use of createElement

* It accept the html tag as a parameter and then it accept the object of properties of that tag, if u dont have attribute then u can leave the object empty

* The third parameter is text





* How to inject the variable or js in jsx

* Lets create a variable in function then we will return it using {variable} syntax. that is how we can use javascript in jsx

* const username = "Hello"
This is exression


{username} -> This is evaluated expression

* Its called evaluated expression because we will only write evaluated js here, we cant perform any operation in it like {if(true) username}

*We cant write operation because
at the end these texts get convererted into object. The variable that we give get injected into that tree as a object in key value pair at the end as a final expression. We cant give the value as a operation in a key value pair


